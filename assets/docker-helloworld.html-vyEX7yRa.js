import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as a,a as t}from"./app-BmK6V31l.js";const l="/assets/2024-01-10-21-53-19-COozUCiS.png",s="/assets/2024-01-10-21-53-34-CguMyBma.png",n="/assets/2024-01-10-21-54-08-XLElTH4s.png",i="/assets/2024-01-10-22-13-31-D1NGlIPm.png",r="/assets/2024-01-10-22-13-41-FQ1yBr52.png",c="/assets/2024-01-10-22-14-01-DGunW0dB.png",d={},p=t(`<h1 id="docker-helloworld" tabindex="-1"><a class="header-anchor" href="#docker-helloworld"><span>Docker - HelloWorld</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在学习本小节之前，你必须确保你正确安装了 Docker，正确安装 Docker 是后续学习的前提，务必确保你已经成功安装。</p><p>另外当你在学习本小节时，可能会出现你完全按照教程进行，但是运行结果并不与教程相符合的情况。这种情况不必担心，因为 Docker 镜像源默认是在海外，国内访问可能不够稳定，在后续的章节中会一一解决这些问题。</p><p>在本章节中的所有关于 Docker 的专有名词，如 镜像、容器、仓库等，不理解属于正常情况，这些内容都会在后续中进行讲解。</p><p>本小节的目的是为了让大家对 Docker 的运行有一个简单的认识，仅此而已。</p><p>如未能成功运行，可先学习自本小节起的后续章节，学习完成后可回头做此学习案例。</p></div><h2 id="hello-world容器样例" tabindex="-1"><a class="header-anchor" href="#hello-world容器样例"><span>Hello World容器样例</span></a></h2><ol><li>拉取 hello-world 镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull hello-world:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>查看本地仓库是否有 hello-world 这个库</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+s+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>运行这个镜像的容器，即实例</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+n+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="centos容器样例" tabindex="-1"><a class="header-anchor" href="#centos容器样例"><span>Centos容器样例</span></a></h2><blockquote><p>在 Centos 环境下执行 <code>/bin/echo &quot;Hello world&quot;</code>指令</p></blockquote><ol><li>拉取 Centos 镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull centos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>查看本地仓库是否有 Centos7 这个镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>运行这个镜像的容器，即实例</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run centos /bin/echo <span class="token string">&quot;Hello world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',23),h=[p];function m(g,u){return o(),a("div",null,h)}const b=e(d,[["render",m],["__file","docker-helloworld.html.vue"]]),f=JSON.parse('{"path":"/dev-tools/docker/docker-helloworld.html","title":"Docker - HelloWorld","lang":"zh-CN","frontmatter":{"order":3,"description":"Docker - HelloWorld 提示 在学习本小节之前，你必须确保你正确安装了 Docker，正确安装 Docker 是后续学习的前提，务必确保你已经成功安装。 另外当你在学习本小节时，可能会出现你完全按照教程进行，但是运行结果并不与教程相符合的情况。这种情况不必担心，因为 Docker 镜像源默认是在海外，国内访问可能不够稳定，在后续的章节中...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/dev-tools/docker/docker-helloworld.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Docker - HelloWorld"}],["meta",{"property":"og:description","content":"Docker - HelloWorld 提示 在学习本小节之前，你必须确保你正确安装了 Docker，正确安装 Docker 是后续学习的前提，务必确保你已经成功安装。 另外当你在学习本小节时，可能会出现你完全按照教程进行，但是运行结果并不与教程相符合的情况。这种情况不必担心，因为 Docker 镜像源默认是在海外，国内访问可能不够稳定，在后续的章节中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-10T15:17:38.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-01-10T15:17:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker - HelloWorld\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-10T15:17:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"Hello World容器样例","slug":"hello-world容器样例","link":"#hello-world容器样例","children":[]},{"level":2,"title":"Centos容器样例","slug":"centos容器样例","link":"#centos容器样例","children":[]}],"git":{"createdTime":1704899858000,"updatedTime":1704899858000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"dev-tools/docker/docker-helloworld.md","localizedDate":"2024年1月10日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>在学习本小节之前，你必须确保你正确安装了 Docker，正确安装 Docker 是后续学习的前提，务必确保你已经成功安装。</p>\\n<p>另外当你在学习本小节时，可能会出现你完全按照教程进行，但是运行结果并不与教程相符合的情况。这种情况不必担心，因为 Docker 镜像源默认是在海外，国内访问可能不够稳定，在后续的章节中会一一解决这些问题。</p>\\n<p>在本章节中的所有关于 Docker 的专有名词，如 镜像、容器、仓库等，不理解属于正常情况，这些内容都会在后续中进行讲解。</p>\\n<p>本小节的目的是为了让大家对 Docker 的运行有一个简单的认识，仅此而已。</p>\\n<p>如未能成功运行，可先学习自本小节起的后续章节，学习完成后可回头做此学习案例。</p>\\n</div>"}');export{b as comp,f as data};
