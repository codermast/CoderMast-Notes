import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c,b as a,e as n,d as s,a as t}from"./app-BmK6V31l.js";const r="/assets/2024-04-22-11-05-47-DnuDt-D3.png",p="/assets/2024-04-22-11-47-44-DQPZCBiH.png",d="/assets/2024-04-22-11-54-21-CWVJfUjA.png",v={},m=t('<h1 id="maven-介绍、安装、配置" tabindex="-1"><a class="header-anchor" href="#maven-介绍、安装、配置"><span>Maven - 介绍、安装、配置</span></a></h1><div class="hint-container tip"><p class="hint-container-title">开始之前</p><p>当正式开始学习本部分内容之前，其实大多数人都已经使用过 Maven 了，有人会说，我明明就是没有使用过 Maven ，也不会使用 Maven 才来学习这个，我要是用过还需要学吗？</p><p>答案是肯定的，举个简单的例子，当你在使用 IDEA 创建一个 SpringBoot 项目时，就已经默认配置好了 Maven，我们并没有去 SpringBoot 官网去下载所需要的 Jar 包，这都是 Maven 帮我们做好了。</p><p>那么又出现一个问题，你说我使用过 Maven，我都没有下载 Maven，也没有配置，怎么就直接使用了？</p><p>很简单，这种情况下你大概率使用的 IDEA 编译器，其本身就自带了 Maven，故你不用手动下载配置，直接可以使用。</p></div><h2 id="maven-介绍" tabindex="-1"><a class="header-anchor" href="#maven-介绍"><span>Maven 介绍</span></a></h2><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="maven-是什么" tabindex="-1"><a class="header-anchor" href="#maven-是什么"><span>Maven 是什么？</span></a></h3><blockquote><p>Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&#39;s build, reporting and documentation from a central piece of information.</p></blockquote><p>Apache Maven 是一个软件项目管理和理解工具，基于项目对象模型（Project Object Model 即 POM）的概念，Maven 可以从中央信息中管理项目的构建、报告和文档。</p><p>Maven 是纯 Java 开发的开源项目，是一个对 Java 的项目管理工具，可以对 Java 项目进行构建、依赖管理。</p><p>Maven 也可被用于构建和管理各种项目，例如 C#，Ruby，Scala 和其他语言编写的项目。Maven 曾是 Jakarta 项目的子项目，现为由 Apache 软件基金会主持的独立 Apache 项目。</p><h3 id="为什么要使用-maven" tabindex="-1"><a class="header-anchor" href="#为什么要使用-maven"><span>为什么要使用 Maven？</span></a></h3><ol><li>Maven 是一个依赖管理工具</li></ol><p>在实际开发过程中，我们会使用到各种框架，或者框架封装的程度越来越高，项目中使用的 Jar 包也越来越多，Jar 包之间的依赖关系也非常复杂，手动获取 Jar 包的难度也非常大，这是因为各个厂商的 Jar 包下载地址各不相同，下载方式也不同，使用难度较大，使用 Maven 后，Maven 会帮助我们解决这些问题。</p><ul><li><p>Jar包规模：有时候项目使用的 jar 包很多，仅使用 SpringBoot、SpringCloud 的部分功能时，就达到了上百个 Jar 包，而使用 Maven 仅需几个核心配置项，简单方便。</p></li><li><p>Jar包来源：建立统一的中央仓库，收录绝大部分常用 Jar 包，也可以上传自定义 Jar 包，大大提高了寻找 Jar 包的效率。</p></li><li><p>Jar包关系：Jar 包之间也有复杂的依赖关系，有时可能同时同时依赖一个 Jar 包的不同版本，产生冲突，Maven 会帮我们处理这些关系。</p></li><li><p>Jar包导入：Java Web 项目中 Jar 包必须存放在指定位置，管理较为分散，使用 Maven 后，直接在 Pom 文件统一配置即可。</p></li></ul><ol start="2"><li>Maven 是一个构建工具</li></ol><p>在项目启动时，Maven 不是必须使用的，但构建是必须要做的，使用 IDEA 开发是时，构建是 IDEA 帮我们做的。</p><div class="hint-container info"><p class="hint-container-title">target</p><p>打开 IDEA 中的排除文件显示，在项目运行后就可以看到创建了 target 文件夹，里面是构建好的 Java 字节码文件。</p></div><p>脱离 IDE 环境时也需要构建</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="maven-安装" tabindex="-1"><a class="header-anchor" href="#maven-安装"><span>Maven 安装</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在前面我们说 IDEA 中已经自带了 Maven，为什么我们还要自己装呢？当然你可以不装，则默认使用 IDEA 中自带的，但是没有配置时，也仅能在 IDEA 中集成使用，且版本一般都不是最新版。如果不使用 IDEA 那么就需要手动装，所以安装这个小结还是很有必要的。</p></div><p>任何操作系统均可去官网下载安装，这是最可靠的方式，但是由于 Maven 在国外，下载较慢，故提供以下方式下载。</p><ul><li>官网下载安装</li></ul><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',23),u={href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},h=t(`<h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><p>暂无其他下载方式</p><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos"><span>MacOS</span></a></h3><ul><li>Homebrew 安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> maven
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),g={class:"hint-container tip"},b=a("p",{class:"hint-container-title"},"Homebrew 下载安装",-1),k=a("p",null,"使用该指令下载安装之前，请先确保成功安装的 Homebrew ，否则你将无法使用该命令安装。",-1),M={href:"https://www.codermast.com/dev-tools/homebrew.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h3><ul><li>使用自带的依赖管理工具安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Ubuntu 系统</span>
<span class="token function">apt</span> <span class="token function">install</span> maven
<span class="token comment"># Centos 系统</span>
yum <span class="token function">install</span> maven
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="maven-配置" tabindex="-1"><a class="header-anchor" href="#maven-配置"><span>Maven 配置</span></a></h2><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量"><span>配置环境变量</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>不进可以配置下载好的 Maven ，也可以直接配置 IDEA 自带 Maven 的环境变量，找到对应的目录即可。</p></div><h4 id="windows-1" tabindex="-1"><a class="header-anchor" href="#windows-1"><span>Windows</span></a></h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>博主暂无 Windows 操作系统，故无法演示。</p></div>`,8),_={href:"https://blog.csdn.net/inexaustible/article/details/127219595",target:"_blank",rel:"noopener noreferrer"},x=t(`<h4 id="macos-1" tabindex="-1"><a class="header-anchor" href="#macos-1"><span>MacOS</span></a></h4><ol><li>检查 JDK 是否配置成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>编辑当前用户的环境变量配置文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>配置 Maven 环境变量</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 复制如下内容，MAVEN_HOME 替换为自己目录</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span>/Users/codermast/Documents/DevEnv/apache-maven-3.9.6
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$MAVEN_HOME</span>/bin:<span class="token environment constant">$PATH</span>:.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>使配置文件生效</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> .bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>检查是否配置成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置成功后可在任意目录执行</span>
mvn <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>成功返回 Maven 版本信息即可。</p><h4 id="linux-1" tabindex="-1"><a class="header-anchor" href="#linux-1"><span>Linux</span></a></h4><p>基本步骤和配置与 MacOS 类似。</p><ol><li>编辑环境变量配置文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>配置环境变量</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 复制如下内容，MAVEN_HOME 替换为自己目录</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span>/usr/local/maven/apache-maven-3.9.6
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$MAVEN_HOME</span>/bin:<span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使配置文件生效</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>检查是否配置成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置成功后可在任意目录执行</span>
mvn <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置自定义镜像" tabindex="-1"><a class="header-anchor" href="#配置自定义镜像"><span>配置自定义镜像</span></a></h3><ul><li>配置阿里云镜像</li></ul><p>向下载解压后 <code>apache-maven-3.9.6/conf/setting.xml</code> 文件中的 <code>&lt;mirrors&gt;&lt;/mirrors&gt;</code> 标签内添加如下信息即可。</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 阿里云仓库 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),w={class:"hint-container tip"},E=a("p",{class:"hint-container-title"},"阿里云Maven",-1),A={href:"https://developer.aliyun.com/mirror/maven",target:"_blank",rel:"noopener noreferrer"};function J(D,y){const e=l("ExternalLinkIcon");return o(),c("div",null,[m,a("p",null,[n("官网地址："),a("a",u,[n("https://maven.apache.org/download.cgi"),s(e)])]),h,a("div",g,[b,k,a("ul",null,[a("li",null,[n("Homebrew 教程："),a("a",M,[n("https://www.codermast.com/dev-tools/homebrew.html"),s(e)])])])]),f,a("p",null,[n("暂时参考该文："),a("a",_,[n("https://blog.csdn.net/inexaustible/article/details/127219595"),s(e)])]),x,a("div",w,[E,a("p",null,[a("a",A,[n("https://developer.aliyun.com/mirror/maven"),s(e)])])])])}const H=i(v,[["render",J],["__file","introduce-install-config.html.vue"]]),S=JSON.parse('{"path":"/dev-tools/maven/introduce-install-config.html","title":"Maven - 介绍、安装、配置","lang":"zh-CN","frontmatter":{"order":1,"description":"Maven - 介绍、安装、配置 开始之前 当正式开始学习本部分内容之前，其实大多数人都已经使用过 Maven 了，有人会说，我明明就是没有使用过 Maven ，也不会使用 Maven 才来学习这个，我要是用过还需要学吗？ 答案是肯定的，举个简单的例子，当你在使用 IDEA 创建一个 SpringBoot 项目时，就已经默认配置好了 Maven，我们并...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/dev-tools/maven/introduce-install-config.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Maven - 介绍、安装、配置"}],["meta",{"property":"og:description","content":"Maven - 介绍、安装、配置 开始之前 当正式开始学习本部分内容之前，其实大多数人都已经使用过 Maven 了，有人会说，我明明就是没有使用过 Maven ，也不会使用 Maven 才来学习这个，我要是用过还需要学吗？ 答案是肯定的，举个简单的例子，当你在使用 IDEA 创建一个 SpringBoot 项目时，就已经默认配置好了 Maven，我们并..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T06:13:15.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-04-22T06:13:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven - 介绍、安装、配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-22T06:13:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"Maven 介绍","slug":"maven-介绍","link":"#maven-介绍","children":[{"level":3,"title":"Maven 是什么？","slug":"maven-是什么","link":"#maven-是什么","children":[]},{"level":3,"title":"为什么要使用 Maven？","slug":"为什么要使用-maven","link":"#为什么要使用-maven","children":[]}]},{"level":2,"title":"Maven 安装","slug":"maven-安装","link":"#maven-安装","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"MacOS","slug":"macos","link":"#macos","children":[]},{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]}]},{"level":2,"title":"Maven 配置","slug":"maven-配置","link":"#maven-配置","children":[{"level":3,"title":"配置环境变量","slug":"配置环境变量","link":"#配置环境变量","children":[]},{"level":3,"title":"配置自定义镜像","slug":"配置自定义镜像","link":"#配置自定义镜像","children":[]}]}],"git":{"createdTime":1713766395000,"updatedTime":1713766395000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":4.87,"words":1460},"filePathRelative":"dev-tools/maven/introduce-install-config.md","localizedDate":"2024年4月22日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">开始之前</p>\\n<p>当正式开始学习本部分内容之前，其实大多数人都已经使用过 Maven 了，有人会说，我明明就是没有使用过 Maven ，也不会使用 Maven 才来学习这个，我要是用过还需要学吗？</p>\\n<p>答案是肯定的，举个简单的例子，当你在使用 IDEA 创建一个 SpringBoot 项目时，就已经默认配置好了 Maven，我们并没有去 SpringBoot 官网去下载所需要的 Jar 包，这都是 Maven 帮我们做好了。</p>\\n<p>那么又出现一个问题，你说我使用过 Maven，我都没有下载 Maven，也没有配置，怎么就直接使用了？</p>\\n<p>很简单，这种情况下你大概率使用的 IDEA 编译器，其本身就自带了 Maven，故你不用手动下载配置，直接可以使用。</p>\\n</div>"}');export{H as comp,S as data};
