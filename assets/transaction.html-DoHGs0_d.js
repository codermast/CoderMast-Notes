import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,c as n,b as i,e as t,d as h,a as e,o as r}from"./app-e7gUmT_h.js";const d={},c=e(`<h1 id="mysql基础-事务" tabindex="-1"><a class="header-anchor" href="#mysql基础-事务"><span>MySQL基础 - 事务</span></a></h1><p>事务是一组操作的集合，他是一个不可分隔的工作单位，事务会把所有的操作作为一个整体一起向系统提交或者撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><h2 id="事务操作" tabindex="-1"><a class="header-anchor" href="#事务操作"><span>事务操作</span></a></h2><ul><li>查看/设置事务提交方式</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @@autocommit;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @@autocommit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">说明</p><p>这里的@@autocommit 属性的值有两种：</p><ul><li>1：则开启自动提交</li><li>0：关闭自动提交，此时事务执行完毕时，需要我们使用指令进行提交。</li></ul></div><ul><li>开启事务</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">START TRANSACTION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-- 或者</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>提交事务</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMIT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>回滚事务</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ROLLBACK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="事务的四大特性" tabindex="-1"><a class="header-anchor" href="#事务的四大特性"><span>事务的四大特性</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>事务的ACID特性，是面试中经常被问到的一个知识点，也是实际业务中容易出错的一个点，需要认真学习。</p></div><ul><li>原子性(Atomicity):事务是不可分割的最小操作单元，要么全部成功，要么全部失败。</li><li>一致性(Consistency):事务完成时，必须使得所有的数据都保持一致状态。</li><li>隔离性(Isolation):数据库提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li><li>持久性(Durability):事务一旦提交或者回滚，它对数据库中数据的改变就是永久的。</li></ul><h2 id="事务并发问题" tabindex="-1"><a class="header-anchor" href="#事务并发问题"><span>事务并发问题</span></a></h2><p>在单线程环境下，对数据库的任何操作都是安全的。但是在并发环境下，对数据库进行事务操作，可能会产生一系列的问题。</p><table><thead><tr><th style="text-align:center;">问题</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">脏读</td><td style="text-align:center;">一个事务读到另外一个事务还没有提交的数据。</td></tr><tr><td style="text-align:center;">不可重复读</td><td style="text-align:center;">一个事务先后读取同一条记录，但是两次读取的数据不一致</td></tr><tr><td style="text-align:center;">幻读</td><td style="text-align:center;">一个事务按照指定条件查询数据时，没有对应的数据记录值，但是在插入操作时，又发现数据已经存在。删除现象也是如此</td></tr></tbody></table><h2 id="事务的隔离级别" tabindex="-1"><a class="header-anchor" href="#事务的隔离级别"><span>事务的隔离级别</span></a></h2>`,19),p=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"center"}},"隔离级别"),i("th",{style:{"text-align":"center"}},"脏读"),i("th",{style:{"text-align":"center"}},"不可重复读"),i("th",{style:{"text-align":"center"}},"幻读")])],-1),k=i("tr",null,[i("td",{style:{"text-align":"center"}},"Read Uncommitted(读未提交)"),i("td",{style:{"text-align":"center"}},"✅"),i("td",{style:{"text-align":"center"}},"✅"),i("td",{style:{"text-align":"center"}},"✅")],-1),o=i("tr",null,[i("td",{style:{"text-align":"center"}},"Read Committed(读已提交)"),i("td",{style:{"text-align":"center"}},"❌"),i("td",{style:{"text-align":"center"}},"✅"),i("td",{style:{"text-align":"center"}},"✅")],-1),g={style:{"text-align":"center"}},A=i("td",{style:{"text-align":"center"}},"❌",-1),m=i("td",{style:{"text-align":"center"}},"❌",-1),y=i("td",{style:{"text-align":"center"}},"✅",-1),u=i("tr",null,[i("td",{style:{"text-align":"center"}},"Serializable(串行化)"),i("td",{style:{"text-align":"center"}},"❌"),i("td",{style:{"text-align":"center"}},"❌"),i("td",{style:{"text-align":"center"}},"❌")],-1),b=e('<ul><li>查看事务的隔离级别</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @@TRANSACTION_ISOLATION;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>设置事务的隔离级别</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [Session|Global]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TRANSACTION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ISOLATION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LEVEL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">READ</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UNCOMMITTED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">READ</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> COMMITTED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">REPEATABLE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> READ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SERIALIZABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>事务的隔离级别越高，数据的安全性也越高，但是性能越低。</p></div>',5);function v(B,D){const s=l("Badge");return r(),n("div",null,[c,i("table",null,[p,i("tbody",null,[k,o,i("tr",null,[i("td",g,[t("Repeatable Read"),h(s,{text:"默认",type:"danger"}),t("(可重复读)")]),A,m,y]),u])]),b])}const F=a(d,[["render",v],["__file","transaction.html.vue"]]),_=JSON.parse('{"path":"/database/mysql/transaction.html","title":"MySQL基础 - 事务","lang":"zh-CN","frontmatter":{"order":6,"description":"MySQL基础 - 事务 事务是一组操作的集合，他是一个不可分隔的工作单位，事务会把所有的操作作为一个整体一起向系统提交或者撤销操作请求，即这些操作要么同时成功，要么同时失败。 事务操作 查看/设置事务提交方式 说明 这里的@@autocommit 属性的值有两种： 1：则开启自动提交 0：关闭自动提交，此时事务执行完毕时，需要我们使用指令进行提交。 ...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/database/mysql/transaction.html"}],["meta",{"property":"og:site_name","content":"友人的编程指南"}],["meta",{"property":"og:title","content":"MySQL基础 - 事务"}],["meta",{"property":"og:description","content":"MySQL基础 - 事务 事务是一组操作的集合，他是一个不可分隔的工作单位，事务会把所有的操作作为一个整体一起向系统提交或者撤销操作请求，即这些操作要么同时成功，要么同时失败。 事务操作 查看/设置事务提交方式 说明 这里的@@autocommit 属性的值有两种： 1：则开启自动提交 0：关闭自动提交，此时事务执行完毕时，需要我们使用指令进行提交。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T13:14:10.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2023-06-13T13:14:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL基础 - 事务\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-13T13:14:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"事务操作","slug":"事务操作","link":"#事务操作","children":[]},{"level":2,"title":"事务的四大特性","slug":"事务的四大特性","link":"#事务的四大特性","children":[]},{"level":2,"title":"事务并发问题","slug":"事务并发问题","link":"#事务并发问题","children":[]},{"level":2,"title":"事务的隔离级别","slug":"事务的隔离级别","link":"#事务的隔离级别","children":[]}],"git":{"createdTime":1681121584000,"updatedTime":1686662050000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":2.06,"words":619},"filePathRelative":"database/mysql/transaction.md","localizedDate":"2023年4月10日","autoDesc":true,"excerpt":"\\n<p>事务是一组操作的集合，他是一个不可分隔的工作单位，事务会把所有的操作作为一个整体一起向系统提交或者撤销操作请求，即这些操作要么同时成功，要么同时失败。</p>\\n<h2>事务操作</h2>\\n<ul>\\n<li>查看/设置事务提交方式</li>\\n</ul>\\n<div class=\\"language-sql line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"sql\\" data-title=\\"sql\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">SELECT</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> @@autocommit;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">SET</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> @@autocommit </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{F as comp,_ as data};
