import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as l}from"./app-E-nNMN4m.js";const t={};function h(n,i){return l(),e("div",null,i[0]||(i[0]=[a('<h1 id="git-仓库内容操作" tabindex="-1"><a class="header-anchor" href="#git-仓库内容操作"><span>Git 仓库内容操作</span></a></h1><h2 id="添加文件到暂存区" tabindex="-1"><a class="header-anchor" href="#添加文件到暂存区"><span>添加文件到暂存区</span></a></h2><p>使用如下指令将工作区的文件添加到暂存区，告诉 Git 在下次 commit 时哪些文件做出了修改。</p><blockquote><p>commit 指令详看后续</p></blockquote><ul><li>添加一个或多个文件到暂存区：</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file1] [file2] ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加指定目录到暂存区</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [dir]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加当前目录下的所有文件到暂存区</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="查看仓库状态" tabindex="-1"><a class="header-anchor" href="#查看仓库状态"><span>查看仓库状态</span></a></h2><p>在使用添加指令向暂存区添加文件后，可以使用如下指令来查看仓库当前状态，可以查看在上次提交之后是否对文件有修改。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令显示如下信息：</p><ul><li>当前分支的名称。</li><li>当前分支与远程分支的关系（例如，是否是最新的）。</li><li>未暂存的修改：显示已修改但尚未使用 git add 添加到暂存区的文件列表。</li><li>未跟踪的文件：显示尚未纳入版本控制的新文件列表。</li></ul><p>根据该指令通常可以判断当前工作目录中的文件状态，并采取适当的操作。</p><p>可以加上 <code>-s</code> 参数来获取简短的输出信息</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="比较文件的不同" tabindex="-1"><a class="header-anchor" href="#比较文件的不同"><span>比较文件的不同</span></a></h2><p>当工作区的内容提交到暂存区后，对工作区文件做出了修改，这时我们如果想对比具体修改了哪些部分，可以使用如下指令</p><ul><li>查看文件 file 工作区和暂存区的差别</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> diff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>显示暂存区和上一次提交 commit 的差别</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 两种写法均可</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file]</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> diff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --staged</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>显示两次提交之间的差异</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> diff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [first-branch]...[second-branch]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="提交暂存区到本地仓库" tabindex="-1"><a class="header-anchor" href="#提交暂存区到本地仓库"><span>提交暂存区到本地仓库</span></a></h2><p>前面使用 <code>git add</code> 指令将工作区文件添加到暂存区，但并没有实质的将文件添加到本地仓库，可以使用如下指令将文件从暂存区添加到本地仓库。</p><ul><li>提交暂存区中所有文件到本地仓库</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [message]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 message 是本次提交的一些备注信息。</p><ul><li>提交暂存区的指定文件到本地仓库</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file1] [file2] ... -m [-a] [message]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里如果使用了 <code>-a</code> 参数，就代表直接将工作区文件提交到本地仓库。</p><h2 id="回退版本" tabindex="-1"><a class="header-anchor" href="#回退版本"><span>回退版本</span></a></h2><p>常常在项目版本控制的过程中，我们无意的提交了一些还尚未完成的版本，这时就需要使用到版本回退，使用如下指令可以指定退回某一次提交的版本，语法如下所示</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [--soft | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--mixed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--hard]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [HEAD]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--mixed</code> 为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset [HEAD]`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--soft</code> 参数用于回退到某个版本：</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --soft</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HEAD</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--hard</code> 参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --hard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HEAD</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>谨慎使用 –-hard 参数，它会删除回退点之前的所有信息。</p></div><div class="hint-container tip"><p class="hint-container-title">HEAD 说明</p><ul><li><p><code>HEAD</code> 表示当前版本</p></li><li><p><code>HEAD^</code> 上一个版本</p></li><li><p><code>HEAD^^</code> 上上一个版本</p></li><li><p><code>HEAD^^^</code> 上上上一个版本</p></li><li><p><code>HEAD~0</code> 表示当前版本</p></li><li><p><code>HEAD~1</code> 上一个版本</p></li><li><p><code>HEAD^2</code> 上上一个版本</p></li><li><p><code>HEAD^3</code> 上上上一个版本</p></li></ul></div><h2 id="删除暂存区和工作区文件" tabindex="-1"><a class="header-anchor" href="#删除暂存区和工作区文件"><span>删除暂存区和工作区文件</span></a></h2><p>git rm 命令用于删除文件。</p><p>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。</p><ul><li>将文件从暂存区和工作区中删除</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-f] &lt;file&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f。</p><ul><li>仅将文件从暂存区删除，而保留工作区</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该指令把文件从暂存区域移除，但仍然保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 <code>--cached</code> 选项即可</p><ul><li>递归删除【与Linux中类似】</li></ul><p>可以递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [dir]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该语句会删除 dir 目录下的所有文件和子目录。</p><h2 id="移动或重命名工作区文件" tabindex="-1"><a class="header-anchor" href="#移动或重命名工作区文件"><span>移动或重命名工作区文件</span></a></h2><ul><li>移动或重命名一个文件、目录或软连接</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file] [newfile]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>如果新文件名已经存在，但还是要重命名它，可以使用 -f 参数：</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [file] [newfile]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="恢复或撤销文件的更改" tabindex="-1"><a class="header-anchor" href="#恢复或撤销文件的更改"><span>恢复或撤销文件的更改</span></a></h2><p>该命令作用包括还原文件到最新提交的状态、丢弃未暂存的更改、丢弃已暂存但未提交的更改等。</p><ul><li>还原文件到最新提交的状态</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令可以将指定文件 &lt;file&gt; 恢复到最新的提交状态，丢弃所有未提交的更改</p><ul><li>还原文件到暂存区的状态</li></ul><p>如果你已经使用 git add 将文件添加到暂存区，但希望撤销这些更改，可以使用这个命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --staged</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上命令将文件 &lt;file&gt; 恢复到暂存区的状态，但不影响工作目录中的文件。</p><ul><li>还原全部更改</li></ul><p>以下命令将还原所有未提交的更改，包括工作目录和暂存区的更改：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用这个命令要谨慎，因为它会清除所有未提交的修改。</p><ul><li>还原文件到指定提交的状态</li></ul><p>如果你想将文件 &lt;file&gt; 恢复到特定提交 &lt;commit&gt; 的状态，可以使用以下命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --source=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令在需要查看历史状态或将文件还原到历史版本时非常有用。</p><ul><li>交互式还原</li></ul><p>以下命令允许你以交互方式选择要还原或保留的更改：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行这个命令它会打开一个交互式界面，让你选择如何处理每个更改。</p><p>git restore 的目标是提供一种更直观、易于理解的方式来管理文件的状态，它的引入使得 Git 用户能够更容易地处理不同阶段的更改，从而提高了工作流的效率。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>git restore 是 Git 2.23 版本引入的一个命令，如果你使用的是较早版本的 Git，可能无法使用 git restore 命令，但你仍然可以使用 git checkout 等命令来进行类似的操作。</p></div>',86)]))}const k=s(t,[["render",h],["__file","git-content-operations.html.vue"]]),p=JSON.parse('{"path":"/dev-tools/git/git-content-operations.html","title":"Git 仓库内容操作","lang":"zh-CN","frontmatter":{"order":4,"description":"Git 仓库内容操作 添加文件到暂存区 使用如下指令将工作区的文件添加到暂存区，告诉 Git 在下次 commit 时哪些文件做出了修改。 commit 指令详看后续 添加一个或多个文件到暂存区： 添加指定目录到暂存区 添加当前目录下的所有文件到暂存区 查看仓库状态 在使用添加指令向暂存区添加文件后，可以使用如下指令来查看仓库当前状态，可以查看在上次提...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/dev-tools/git/git-content-operations.html"}],["meta",{"property":"og:site_name","content":"友人的编程指南"}],["meta",{"property":"og:title","content":"Git 仓库内容操作"}],["meta",{"property":"og:description","content":"Git 仓库内容操作 添加文件到暂存区 使用如下指令将工作区的文件添加到暂存区，告诉 Git 在下次 commit 时哪些文件做出了修改。 commit 指令详看后续 添加一个或多个文件到暂存区： 添加指定目录到暂存区 添加当前目录下的所有文件到暂存区 查看仓库状态 在使用添加指令向暂存区添加文件后，可以使用如下指令来查看仓库当前状态，可以查看在上次提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-04T15:44:12.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-04-04T15:44:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git 仓库内容操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-04T15:44:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"添加文件到暂存区","slug":"添加文件到暂存区","link":"#添加文件到暂存区","children":[]},{"level":2,"title":"查看仓库状态","slug":"查看仓库状态","link":"#查看仓库状态","children":[]},{"level":2,"title":"比较文件的不同","slug":"比较文件的不同","link":"#比较文件的不同","children":[]},{"level":2,"title":"提交暂存区到本地仓库","slug":"提交暂存区到本地仓库","link":"#提交暂存区到本地仓库","children":[]},{"level":2,"title":"回退版本","slug":"回退版本","link":"#回退版本","children":[]},{"level":2,"title":"删除暂存区和工作区文件","slug":"删除暂存区和工作区文件","link":"#删除暂存区和工作区文件","children":[]},{"level":2,"title":"移动或重命名工作区文件","slug":"移动或重命名工作区文件","link":"#移动或重命名工作区文件","children":[]},{"level":2,"title":"恢复或撤销文件的更改","slug":"恢复或撤销文件的更改","link":"#恢复或撤销文件的更改","children":[]}],"git":{"createdTime":1712245452000,"updatedTime":1712245452000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":5.63,"words":1688},"filePathRelative":"dev-tools/git/git-content-operations.md","localizedDate":"2024年4月4日","autoDesc":true,"excerpt":"\\n<h2>添加文件到暂存区</h2>\\n<p>使用如下指令将工作区的文件添加到暂存区，告诉 Git 在下次 commit 时哪些文件做出了修改。</p>\\n<blockquote>\\n<p>commit 指令详看后续</p>\\n</blockquote>\\n<ul>\\n<li>添加一个或多个文件到暂存区：</li>\\n</ul>\\n<div class=\\"language-sh line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"sh\\" data-title=\\"sh\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">git</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> add</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> [file1] [file2] ...</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{k as comp,p as data};
