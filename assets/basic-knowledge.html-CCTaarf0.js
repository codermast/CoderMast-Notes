import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as n,a}from"./app-D_B85gem.js";const l="/assets/options1-BXUbe11E.gif",e="/assets/options2-sqnRU9zd.gif",p="/assets/composition1--eCMrV-v.gif",t="/assets/composition2-CkAOZqSu.gif",d={},h=a(`<h1 id="_2-基础知识" tabindex="-1"><a class="header-anchor" href="#_2-基础知识"><span>2. 基础知识</span></a></h1><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>my-vue3-project/</span></span>
<span class="line"><span>├── public/           # 静态资源文件夹，其中的文件会直接复制到构建输出目录中，无需经过编译处理</span></span>
<span class="line"><span>│   ├── favicon.ico    # 网站图标</span></span>
<span class="line"><span>│   └── index.html    # 应用程序入口HTML文件，Vue应用将挂载于此文件中的特定元素上</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── assets/        # 静态资源目录，包含图片、字体等未经过webpack编译的文件，可使用import导入并在构建时进行处理</span></span>
<span class="line"><span>│   ├── components/    # 组件目录，按照功能或类别划分存放单文件组件（.vue文件）</span></span>
<span class="line"><span>│   │   ├── Common/     # 公共组件目录</span></span>
<span class="line"><span>│   │   ├── Layout/     # 布局组件目录</span></span>
<span class="line"><span>│   │   └── ...         # 其他分类组件目录</span></span>
<span class="line"><span>│   ├── directives/    # 自定义指令目录，存放Vue自定义指令实现</span></span>
<span class="line"><span>│   ├── hooks/         # Vue Composition API 的自定义 Hooks 目录，用于组织和复用可组合的逻辑单元</span></span>
<span class="line"><span>│   ├── layouts/       # 应用布局相关的组件存放处，例如通用页面布局组件</span></span>
<span class="line"><span>│   │   ├── AppLayout.vue </span></span>
<span class="line"><span>│   │   └── ...         # 其他布局相关页面组件</span></span>
<span class="line"><span>│   ├── pages/          # 页面组件目录，根据功能模块划分不同页面组件</span></span>
<span class="line"><span>│   │   ├── Home/       # 主页或首页相关页面组件</span></span>
<span class="line"><span>│   │   │   ├── Index.vue</span></span>
<span class="line"><span>│   │   │   └── ...</span></span>
<span class="line"><span>│   │   ├── User/       # 用户管理相关的页面组件</span></span>
<span class="line"><span>│   │   │   ├── Profile.vue</span></span>
<span class="line"><span>│   │   │   ├── Settings.vue</span></span>
<span class="line"><span>│   │   │   └── ...</span></span>
<span class="line"><span>│   │   ├── Product/    # 产品管理相关的页面组件</span></span>
<span class="line"><span>│   │   │   ├── List.vue</span></span>
<span class="line"><span>│   │   │   ├── Detail.vue</span></span>
<span class="line"><span>│   │   │   └── ...</span></span>
<span class="line"><span>│   │   └── ...         # 其他功能模块的页面组件目录</span></span>
<span class="line"><span>│   ├── plugins/       # Vue 插件配置目录，存放全局注册的插件及其配置</span></span>
<span class="line"><span>│   ├── router/        # 路由配置目录，主要包含index.js路由文件，用于配置应用程序的路由规则</span></span>
<span class="line"><span>│   ├── store/         # Vuex 状态管理目录，用于集中管理组件状态和数据流</span></span>
<span class="line"><span>│   ├── styles/        # 样式文件目录，包括全局样式、主题样式等</span></span>
<span class="line"><span>│   ├── utils/         # 工具函数和类库目录，存放项目中常用的工具函数、辅助类等</span></span>
<span class="line"><span>│   ├── App.vue        # 应用程序根组件，整个应用的入口点，通常包含路由视图和其他全局共享组件</span></span>
<span class="line"><span>│   ├── main.ts        # 应用程序入口脚本，用于初始化Vue实例、引入并配置路由、状态管理等核心模块</span></span>
<span class="line"><span>│   └── shims-vue.d.ts # TypeScript 类型声明文件，为Vue相关API提供类型支持</span></span>
<span class="line"><span>├── tests/             # 测试相关文件目录，存放单元测试、集成测试等代码</span></span>
<span class="line"><span>├── .env.*             # 环境变量配置文件，根据不同环境如开发、生产等设置不同的环境变量</span></span>
<span class="line"><span>├── .eslintrc.js       # Eslint 配置文件，用于定义项目的代码风格规范和错误检查规则</span></span>
<span class="line"><span>├── .gitignore         # Git 忽略文件，列出不需要添加到版本控制的文件或目录</span></span>
<span class="line"><span>├── package-lock.json  #  npm 包管理器中用于锁定项目依赖版本的文件</span></span>
<span class="line"><span>├── package.json       # npm 包配置文件，包括项目依赖、脚本命令、项目信息等元数据</span></span>
<span class="line"><span>├── vite.config.ts     # Vite 构建工具的配置文件，用于定制Vite的构建行为（如果使用Vite构建系统）</span></span>
<span class="line"><span>├── README.md          # 项目文档和说明文件，介绍项目结构、启动方式及注意事项等</span></span>
<span class="line"><span>├── tsconfig.json          # TypeScript 项目的核心配置文件，用于指定编译选项、包含的源文件、排除的文件等信息</span></span>
<span class="line"><span>├── tsconfig.node.json          # 针对 Node.js 应用程序进行更细粒度的 TypeScript 编译设置</span></span>
<span class="line"><span>├── .prettierrc        # Prettier 代码格式化配置文件，定义代码格式化规则</span></span>
<span class="line"><span>├── .ls-lint.yml       # Linting 规则配置文件，例如针对Less预处理器的代码风格检查规则</span></span>
<span class="line"><span>└── changelog.md       # 更新日志文件，记录项目的版本迭代和更新内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范"><span>命名规范</span></a></h2><ul><li>Vue 组件：大驼峰命名法。<code>MyVueComponent</code></li><li>变量：小驼峰命名法。<code>myVueVariable</code></li><li>方法：小驼峰命名法。<code>getUserInfo()</code></li><li>目录：小写英文即可。<code>component/common/header/</code></li><li>常量：全为大写英文的蛇形命名法。<code>SUCCESS_CODE</code></li></ul><h2 id="vue-组件组成" tabindex="-1"><a class="header-anchor" href="#vue-组件组成"><span>Vue 组件组成</span></a></h2><p>每个 Vue 组件由 3 个部分组成：模板区<code>&lt;template&gt;&lt;/template&gt;</code>、JS/TS 脚本区<code>&lt;script&gt;&lt;/script&gt;</code>、CSS 样式区<code>&lt;style&gt;&lt;/style&gt;</code>，其中模板区是必须存在的，JS 脚本区和 CSS 样式区是可选的。</p><ul><li>模板区<code>&lt;template&gt;&lt;/template&gt;</code>：主要编写渲染在页面上的一些 HTML</li><li>JS/TS 脚本区<code>&lt;script&gt;&lt;/script&gt;</code>：主要编写一些在当前组件中使用到的一些脚本</li><li>CSS 样式区<code>&lt;style&gt;&lt;/style&gt;</code>：主要编写一些在当前组件中使用到的样式表</li></ul><div class="hint-container important"><p class="hint-container-title">下面是一个简单的 Vue 组件实例</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;You clicked me {{ count }} times.&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="api风格" tabindex="-1"><a class="header-anchor" href="#api风格"><span>API风格</span></a></h2><p>这里的 API 风格是指 Vue 的两种编写风格，一种是 组合式，一种是选项式。</p><ul><li>选项式 Options API ：其内部的数据、方法、计算属性是分散的，新增和修改时，就需要分别修改data、method、computed，不便于维护和更新。</li></ul><div style="text-align:center;"><p><img src="`+l+'" alt="" height="400" loading="lazy"> <img src="'+e+'" alt="" height="400" loading="lazy"></p></div><ul><li>组合式 Composition API：可以采用函数的方式，实现代码的复用，且逻辑清晰，便于维护和更新。</li></ul><div style="text-align:center;"><p><img src="'+p+'" alt="" height="300" loading="lazy"> <img src="'+t+`" alt="" height="300" loading="lazy"></p></div><blockquote><p>说明：以上四张动图原创作者：大帅老猿</p></blockquote><div class="hint-container important"><p class="hint-container-title">两种 API 风格的选择和使用，主要是依靠 Setup 来进行的，具体请参考下面 Setup 小节的内容。</p></div><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h2><p>Vue 3 中的 Setup 有两种，一种是 setup 函数，一种是 script 中的 setup。</p><ul><li>setup 函数：一般是 Vue2 中的选项式 API 使用，使用方法如下所示：</li></ul><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 返回值会暴露给模板和其他的选项式 API 钩子</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      count</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  mounted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;{{ count }}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>script 中的 setup：Vue3 中为了简化setup函数，一般是组合式 API 使用，是目前比较主流的一种方式。</li></ul><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 计算属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> mounted</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  computed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  // 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;计算后的值：{{ mounted }}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;{{ count }}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">小结</p><p>对比上面两种风格的 API，能够明显的看到，组合式 API 的优势，所以在 Vue 3 的开发中，推荐使用这种用法。</p><p>本系列的后续教程也均以组合式 API 的风格来进行说明。</p></div>`,24),k=[h];function r(c,v){return n(),i("div",null,k)}const g=s(d,[["render",r],["__file","basic-knowledge.html.vue"]]),m=JSON.parse('{"path":"/front-end/vue3/basic-knowledge.html","title":"2. 基础知识","lang":"zh-CN","frontmatter":{"order":2,"description":"2. 基础知识 目录结构 命名规范 Vue 组件：大驼峰命名法。MyVueComponent 变量：小驼峰命名法。myVueVariable 方法：小驼峰命名法。getUserInfo() 目录：小写英文即可。component/common/header/ 常量：全为大写英文的蛇形命名法。SUCCESS_CODE Vue 组件组成 每个 Vue 组件...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/front-end/vue3/basic-knowledge.html"}],["meta",{"property":"og:site_name","content":"友人的编程指南"}],["meta",{"property":"og:title","content":"2. 基础知识"}],["meta",{"property":"og:description","content":"2. 基础知识 目录结构 命名规范 Vue 组件：大驼峰命名法。MyVueComponent 变量：小驼峰命名法。myVueVariable 方法：小驼峰命名法。getUserInfo() 目录：小写英文即可。component/common/header/ 常量：全为大写英文的蛇形命名法。SUCCESS_CODE Vue 组件组成 每个 Vue 组件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-29T03:35:36.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-05-29T03:35:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. 基础知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-29T03:35:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":2,"title":"命名规范","slug":"命名规范","link":"#命名规范","children":[]},{"level":2,"title":"Vue 组件组成","slug":"vue-组件组成","link":"#vue-组件组成","children":[]},{"level":2,"title":"API风格","slug":"api风格","link":"#api风格","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]}],"git":{"createdTime":1716884653000,"updatedTime":1716953736000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":2}]},"readingTime":{"minutes":4.93,"words":1479},"filePathRelative":"front-end/vue3/basic-knowledge.md","localizedDate":"2024年5月28日","autoDesc":true,"excerpt":"\\n<h2>目录结构</h2>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>my-vue3-project/</span></span>\\n<span class=\\"line\\"><span>├── public/           # 静态资源文件夹，其中的文件会直接复制到构建输出目录中，无需经过编译处理</span></span>\\n<span class=\\"line\\"><span>│   ├── favicon.ico    # 网站图标</span></span>\\n<span class=\\"line\\"><span>│   └── index.html    # 应用程序入口HTML文件，Vue应用将挂载于此文件中的特定元素上</span></span>\\n<span class=\\"line\\"><span>├── src/</span></span>\\n<span class=\\"line\\"><span>│   ├── assets/        # 静态资源目录，包含图片、字体等未经过webpack编译的文件，可使用import导入并在构建时进行处理</span></span>\\n<span class=\\"line\\"><span>│   ├── components/    # 组件目录，按照功能或类别划分存放单文件组件（.vue文件）</span></span>\\n<span class=\\"line\\"><span>│   │   ├── Common/     # 公共组件目录</span></span>\\n<span class=\\"line\\"><span>│   │   ├── Layout/     # 布局组件目录</span></span>\\n<span class=\\"line\\"><span>│   │   └── ...         # 其他分类组件目录</span></span>\\n<span class=\\"line\\"><span>│   ├── directives/    # 自定义指令目录，存放Vue自定义指令实现</span></span>\\n<span class=\\"line\\"><span>│   ├── hooks/         # Vue Composition API 的自定义 Hooks 目录，用于组织和复用可组合的逻辑单元</span></span>\\n<span class=\\"line\\"><span>│   ├── layouts/       # 应用布局相关的组件存放处，例如通用页面布局组件</span></span>\\n<span class=\\"line\\"><span>│   │   ├── AppLayout.vue </span></span>\\n<span class=\\"line\\"><span>│   │   └── ...         # 其他布局相关页面组件</span></span>\\n<span class=\\"line\\"><span>│   ├── pages/          # 页面组件目录，根据功能模块划分不同页面组件</span></span>\\n<span class=\\"line\\"><span>│   │   ├── Home/       # 主页或首页相关页面组件</span></span>\\n<span class=\\"line\\"><span>│   │   │   ├── Index.vue</span></span>\\n<span class=\\"line\\"><span>│   │   │   └── ...</span></span>\\n<span class=\\"line\\"><span>│   │   ├── User/       # 用户管理相关的页面组件</span></span>\\n<span class=\\"line\\"><span>│   │   │   ├── Profile.vue</span></span>\\n<span class=\\"line\\"><span>│   │   │   ├── Settings.vue</span></span>\\n<span class=\\"line\\"><span>│   │   │   └── ...</span></span>\\n<span class=\\"line\\"><span>│   │   ├── Product/    # 产品管理相关的页面组件</span></span>\\n<span class=\\"line\\"><span>│   │   │   ├── List.vue</span></span>\\n<span class=\\"line\\"><span>│   │   │   ├── Detail.vue</span></span>\\n<span class=\\"line\\"><span>│   │   │   └── ...</span></span>\\n<span class=\\"line\\"><span>│   │   └── ...         # 其他功能模块的页面组件目录</span></span>\\n<span class=\\"line\\"><span>│   ├── plugins/       # Vue 插件配置目录，存放全局注册的插件及其配置</span></span>\\n<span class=\\"line\\"><span>│   ├── router/        # 路由配置目录，主要包含index.js路由文件，用于配置应用程序的路由规则</span></span>\\n<span class=\\"line\\"><span>│   ├── store/         # Vuex 状态管理目录，用于集中管理组件状态和数据流</span></span>\\n<span class=\\"line\\"><span>│   ├── styles/        # 样式文件目录，包括全局样式、主题样式等</span></span>\\n<span class=\\"line\\"><span>│   ├── utils/         # 工具函数和类库目录，存放项目中常用的工具函数、辅助类等</span></span>\\n<span class=\\"line\\"><span>│   ├── App.vue        # 应用程序根组件，整个应用的入口点，通常包含路由视图和其他全局共享组件</span></span>\\n<span class=\\"line\\"><span>│   ├── main.ts        # 应用程序入口脚本，用于初始化Vue实例、引入并配置路由、状态管理等核心模块</span></span>\\n<span class=\\"line\\"><span>│   └── shims-vue.d.ts # TypeScript 类型声明文件，为Vue相关API提供类型支持</span></span>\\n<span class=\\"line\\"><span>├── tests/             # 测试相关文件目录，存放单元测试、集成测试等代码</span></span>\\n<span class=\\"line\\"><span>├── .env.*             # 环境变量配置文件，根据不同环境如开发、生产等设置不同的环境变量</span></span>\\n<span class=\\"line\\"><span>├── .eslintrc.js       # Eslint 配置文件，用于定义项目的代码风格规范和错误检查规则</span></span>\\n<span class=\\"line\\"><span>├── .gitignore         # Git 忽略文件，列出不需要添加到版本控制的文件或目录</span></span>\\n<span class=\\"line\\"><span>├── package-lock.json  #  npm 包管理器中用于锁定项目依赖版本的文件</span></span>\\n<span class=\\"line\\"><span>├── package.json       # npm 包配置文件，包括项目依赖、脚本命令、项目信息等元数据</span></span>\\n<span class=\\"line\\"><span>├── vite.config.ts     # Vite 构建工具的配置文件，用于定制Vite的构建行为（如果使用Vite构建系统）</span></span>\\n<span class=\\"line\\"><span>├── README.md          # 项目文档和说明文件，介绍项目结构、启动方式及注意事项等</span></span>\\n<span class=\\"line\\"><span>├── tsconfig.json          # TypeScript 项目的核心配置文件，用于指定编译选项、包含的源文件、排除的文件等信息</span></span>\\n<span class=\\"line\\"><span>├── tsconfig.node.json          # 针对 Node.js 应用程序进行更细粒度的 TypeScript 编译设置</span></span>\\n<span class=\\"line\\"><span>├── .prettierrc        # Prettier 代码格式化配置文件，定义代码格式化规则</span></span>\\n<span class=\\"line\\"><span>├── .ls-lint.yml       # Linting 规则配置文件，例如针对Less预处理器的代码风格检查规则</span></span>\\n<span class=\\"line\\"><span>└── changelog.md       # 更新日志文件，记录项目的版本迭代和更新内容</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{g as comp,m as data};
